{
  "sksl": {
    "entrypoint": "game_of_life_simulate_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float play;\nuniform float uGridSize;\nuniform shader uSampler;\nuniform half2 uSampler_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_main()\n{\n    vec2 uv = FLT_flutter_local_FlutterFragCoord() / uSize;\n    uv.x *= (uSize.x / uSize.y);\n    vec2 gridPos = floor((uv * uSize) / vec2(uGridSize));\n    vec2 cellCenter = ((gridPos + vec2(0.5)) * uGridSize) / uSize;\n    float cellState = uSampler.eval(uSampler_size * ( cellCenter)).x;\n    int aliveNeighbors = 0;\n    for (int x = -1; x <= 1; x++)\n    {\n        for (int y = -1; y <= 1; y++)\n        {\n            if ((x == 0) && (y == 0))\n            {\n                continue;\n            }\n            vec2 neighborPos = gridPos + vec2(float(x), float(y));\n            bool _110 = neighborPos.x < 0.0;\n            bool _121;\n            if (!_110)\n            {\n                _121 = neighborPos.x >= (uSize.x / uGridSize);\n            }\n            else\n            {\n                _121 = _110;\n            }\n            bool _128;\n            if (!_121)\n            {\n                _128 = neighborPos.y < 0.0;\n            }\n            else\n            {\n                _128 = _121;\n            }\n            bool _139;\n            if (!_128)\n            {\n                _139 = neighborPos.y >= (uSize.y / uGridSize);\n            }\n            else\n            {\n                _139 = _128;\n            }\n            if (_139)\n            {\n                continue;\n            }\n            neighborPos = mod(neighborPos, uSize / vec2(uGridSize));\n            vec2 neighborUV = ((neighborPos + vec2(0.5)) * uGridSize) / uSize;\n            float neighborState = uSampler.eval(uSampler_size * ( neighborUV)).x;\n            if (neighborState > 0.5)\n            {\n                aliveNeighbors++;\n            }\n        }\n    }\n    if (cellState > 0.5)\n    {\n        if ((aliveNeighbors < 2) || (aliveNeighbors > 3))\n        {\n            fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n        else\n        {\n            fragColor = vec4(1.0);\n        }\n    }\n    else\n    {\n        if (aliveNeighbors == 3)\n        {\n            fragColor = vec4(1.0);\n        }\n        else\n        {\n            fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 1,
        "name": "uSampler",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "play",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "uGridSize",
        "rows": 1,
        "type": 10
      }
    ]
  }
}